---
interface Props {
  title: string;
  lang: string;
}
import Footers from "@components/Footers.astro";

import Navs from "../components/Navs.astro";
const { title, lang } = Astro.props;
import { getImage } from "astro:assets";
import Logo from "../assets/logo.png"
const KlienOp = await getImage({ src: Logo, format: "webp" });

---

<!doctype html>
<html lang={lang} class="motion-safe:scroll-smooth 2xl:text-[20px]">
  <head>

    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/webp" href={KlienOp.src} />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
<!-- Cloudflare Web Analytics --><script defer src='https://static.cloudflareinsights.com/beacon.min.js' data-cf-beacon='{"token": "e4bf4b0b020944789619c6cabcb9dd37"}'></script><!-- End Cloudflare Web Analytics -->
  </head>
  <body class="font-mono m-0 p-0">
    <Navs />
    
    <div class="px-8 pt-18 mx-auto max-w-7xl">

      <slot /></div>
  <Footers />
    
  <script>
    document.addEventListener("DOMContentLoaded", function() {
        interface SSEData {
            totalFilesConverted?: number;
            totalSizeConverted?: number;
        }
    
        let sseData: SSEData = {};
        let eventSource: EventSource | null = null;
    
        function openSSE() {
            eventSource = new EventSource("https://webp.qlm.one/sse");
            eventSource.onmessage = function (event: MessageEvent) {
                sseData = JSON.parse(event.data);
                updateDisplay();
            };
            eventSource.onerror = function () {
                console.error("EventSource failed, reconnecting...");
                eventSource?.close();
                setTimeout(openSSE, 1000);
            };
        }
    
        function updateDisplay() {
            const totalFilesConverted = sseData.totalFilesConverted || 0;
            const totalSizeConverted = sseData.totalSizeConverted || 0;
            const sizeUnit = Math.floor(Math.log(totalSizeConverted) / Math.log(1024));
            const totalSizeFormatted = (totalSizeConverted / Math.pow(1024, sizeUnit)).toFixed(2);
            const byteUnits = ["Bytes", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"];
            const sizeLabel = byteUnits[sizeUnit];
    
            const fileElements = document.getElementsByClassName("totalFilesConverted");
            const sizeElements = document.getElementsByClassName("totalSizeConverted");
    
            for (let i = 0; i < fileElements.length; i++) {
                fileElements[i].textContent = totalFilesConverted.toString();
                sizeElements[i].textContent = `${totalSizeFormatted} ${sizeLabel}`;
            }
        }
    
        openSSE();
    });
    
    </script>
    
  </body>
</html>
